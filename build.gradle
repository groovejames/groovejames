apply plugin: 'java'

group 'groovejames'
version '35'

compileJava.options.encoding = 'utf-8'
compileJava.options.compilerArgs << '-Xlint:unchecked'
compileJava.sourceCompatibility = '1.7'
compileJava.targetCompatibility = '1.7'
compileTestJava.options.encoding = 'utf-8'
compileTestJava.options.compilerArgs << '-Xlint:unchecked'
compileTestJava.sourceCompatibility = '1.7'
compileTestJava.targetCompatibility = '1.7'

repositories { mavenCentral() }

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.20'
    compile 'com.google.guava:guava:18.0'
    compile ('org.apache.httpcomponents:httpclient:4.3.6') {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    compile 'org.blinkenlights.jid3:JID3:0.46'
    compile 'org.apache.pivot:pivot-core:2.0.4'
    compile 'org.apache.pivot:pivot-wtk:2.0.4'
    compile 'org.apache.pivot:pivot-wtk-terra:2.0.4'
    compile ('com.mashape.unirest:unirest-java:1.4.7') {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.2'
    compile 'com.github.tulskiy:jkeymaster:1.2'
    runtime 'org.slf4j:jcl-over-slf4j:1.7.13'
    runtime 'ch.qos.logback:logback-classic:1.1.8'
    testCompile 'junit:junit:4.12'
}


task updateVersionProperties << {
    file('src/main/resources/groovejames/gui/build.properties').withWriter { w ->
        w << "build.number=$version" << "\n" << "build.date=" << new Date()
    }
}
compileJava.dependsOn updateVersionProperties


jar {
    // build uber-jar containing all other jars
    from(configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) })
    manifest {
        attributes "Main-Class": "groovejames.gui.Main",
                "Build-Number": "$version",
                "Build-Date": new Date()
        //, "SplashScreen-Image": "org/lastjames/gui/resources/splash.png"
    }
}
tasks.jar.dependsOn updateVersionProperties


task distBinPrepare(type: Copy) {
    dependsOn jar
    from 'CHANGES.md', 'grooveJames.exe', 'etc/grooveJames.desktop'
    from 'src/main/resources/groovejames/gui/images/butler-128.png'
    from("$buildDir/libs/") {
        include 'groovejames-*.jar'
    }
    into "$buildDir/dist/bin/"
    rename 'groovejames-.+\\.jar', 'grooveJames.jar'
    rename 'butler-128.png', 'grooveJames.png'
}


task distBin(type: Zip) {
    dependsOn distBinPrepare
    from "$buildDir/dist/bin/"
    include '*'
    destinationDir = file("$buildDir/dist")
    archiveName = "grooveJames-r$version-bin.zip"
}


task distSrc(type: Zip) {
    from(".") {
        exclude 'out', 'build', 'classes', '.gradle', '.idea'
        exclude '**/.svn/**', '**/*.log', '**/*.log.*', '**/Thumbs.db'
        exclude '**/.project', '**/.classpath', '**/.settings'
        exclude '**/*.ipr', '**/*.iml', '**/*.iws'
    }
    destinationDir = file("$buildDir/dist")
    archiveName = "grooveJames-r$version-src.zip"
    into('grooveJames')
}


task exe << {
    if (!project.hasProperty('launch4jDir') || !file(launch4jDir).exists()) {
        throw new GradleException('Cannot create exe because Launch4j not found. Use -Plaunch4jDir=[dir] to set the Launch4j installation directory or add file gradle.properties with "launch4jDir=[dir]"')
    }
    ant.taskdef(name: 'launch4j', classname: 'net.sf.launch4j.ant.Launch4jTask',
            classpath: "$launch4jDir/launch4j.jar"
    )
    ant.launch4j(configFile: 'launch4j.xml')
}


task distAll(dependsOn: [clean, build, distBin, distSrc])
build.mustRunAfter clean


task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}
