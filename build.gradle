apply plugin: 'java'

group 'groovejames'
version '28'

compileJava.options.encoding = 'utf-8'
compileJava.options.compilerArgs << "-Xlint:unchecked"
compileJava.sourceCompatibility = '1.6'
compileJava.targetCompatibility = '1.6'
compileTestJava.options.encoding = 'utf-8'
compileTestJava.options.compilerArgs << "-Xlint:unchecked"
compileTestJava.sourceCompatibility = '1.6'
compileTestJava.targetCompatibility = '1.6'

repositories { mavenCentral() }

dependencies {
    compile('log4j:log4j:1.2.17') {
        exclude group: 'javax.mail', module: 'mail'
        exclude group: 'javax.jms', module: 'jms'
        exclude group: 'com.sun.jdmk', module: 'jmxtools'
        exclude group: 'com.sun.jmx', module: 'jmxri'
    }
    compile 'org.apache.httpcomponents:httpclient:4.0.1'
    compile('com.googlecode.json-simple:json-simple:1.1.1') {
        exclude group: 'junit', module: 'junit'
    }
    compile 'org.blinkenlights.jid3:JID3:0.46'
    compile 'org.apache.pivot:pivot-core:2.0.4'
    compile 'org.apache.pivot:pivot-wtk:2.0.4'
    compile 'org.apache.pivot:pivot-wtk-terra:2.0.4'
}


task updateVersionProperties << {
    file('src/main/resources/groovejames/gui/build.properties').withWriter { w ->
        w << "build.number=$version" << "\n" << "build.date=" << new Date()
    }
}
compileJava.dependsOn updateVersionProperties

// Copy resources files from src (*.bxml files) to classes dir.
// Note that we don't mark src as resource folder as it causes problems with IntelliJ
//compileJava {
//    doLast {
//        copy {
//            from "src"
//            into sourceSets.main.output.classesDir
//            exclude "**/*.java"
//        }
//    }
//}


jar {
    // build uber-jar containing all other jars
    from(configurations.compile.collect { it.isDirectory() ? it : zipTree(it) })
    manifest {
        attributes "Main-Class": "groovejames.gui.Main",
                "Build-Number": "$version",
                "Build-Date": new Date()
        //, "SplashScreen-Image": "org/lastjames/gui/resources/splash.png"
    }
}
tasks.jar.dependsOn updateVersionProperties


task distBinPrepare(type: Copy) {
    dependsOn jar
    from 'CHANGES.txt', 'grooveJames.exe'
    from("$buildDir/libs/") {
        include 'groovejames-*.jar'
    }
    into "$buildDir/dist/bin/"
    rename 'groovejames-.+\\.jar', 'grooveJames.jar'
}


task distBin(type: Zip) {
    dependsOn distBinPrepare
    from "$buildDir/dist/bin/"
    include '*'
    destinationDir = file("$buildDir/dist")
    archiveName = "grooveJames-r$version-bin.zip"
}


task distSrc(type: Zip) {
    from(".") {
        exclude 'out', 'build', 'classes', '.gradle', '.idea'
        exclude '**/.svn/**', '**/*.log', '**/*.log.*', '**/Thumbs.db'
        exclude '**/.project', '**/.classpath', '**/.settings'
        exclude '**/*.ipr', '**/*.iml', '**/*.iws'
    }
    destinationDir = file("$buildDir/dist")
    archiveName = "grooveJames-r$version-src.zip"
    into('grooveJames')
}


task exe << {
    if (!project.hasProperty('launch4jDir') || !file(launch4jDir).exists()) {
        throw new GradleException('Cannot create exe because Launch4j not found. Use -Plaunch4jDir=[dir] to set the Launch4j installation directory or add file gradle.properties with "launch4jDir=[dir]"')
    }
    ant.taskdef(name: 'launch4j', classname: 'net.sf.launch4j.ant.Launch4jTask',
            classpath: "$launch4jDir/launch4j.jar"
    )
    ant.launch4j(configFile: 'launch4j.xml')
}


task all(dependsOn: [clean, build, distBin, distSrc])
build.mustRunAfter clean


task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
    copy {
        from 'etc/intellij/'
        into '.idea/'
    }
}
