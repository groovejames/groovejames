<project name="grooveJames" basedir="." default="all">

    <property name="launch4j.dir" location="C:/dev/projects/launch4j-3.0.1"/>

    <available property="launch4j.isAvailable" file="${launch4j.dir}/launch4j.jar"/>

    <fileset id="libs" dir="lib" includes="*.jar"/>

    <path id="compile.classpath">
        <fileset refid="libs"/>
    </path>


    <target name="compile" description="compile all" depends="readBuildNumber">
        <mkdir dir="out/production/gs"/>
        <javac srcdir="src"
               destdir="out/production/gs"
               classpathref="compile.classpath"
               debug="true"
               deprecation="true"
               source="1.6"
               target="1.6"
               includeantruntime="false"
               includejavaruntime="false"/>
        <copy todir="out/production/gs">
            <fileset dir="src">
                <include name="**/*.png"/>
                <include name="**/*.gif"/>
                <include name="**/*.properties"/>
                <include name="**/*.bxml"/>
                <include name="**/*.json"/>
            </fileset>
        </copy>
    </target>


    <target name="jar" depends="readBuildNumber, compile">
        <jar destfile="out/grooveJames.jar" compress="true">
            <manifest>
                <attribute name="Main-Class" value="groovejames.gui.Main"/>
                <attribute name="Build-Number" value="${build.number}"/>
                <attribute name="Build-Date" value="${build.date}"/>
                <!--<attribute name="SplashScreen-Image" value="org/lastjames/gui/resources/splash.png"/>-->
            </manifest>
            <zipgroupfileset refid="libs"/>
            <fileset dir="out/production/gs"/>
        </jar>
    </target>


    <target name="exe" description="(re)creates the grooveJames.exe launcher">
        <fail unless="launch4j.isAvailable"
              message="Cannot create exe because Launch4j not found. Use -Dlaunch4j.dir=[dir] to set the Launch4j installation directory."/>
        <taskdef name="launch4j"
                 classname="net.sf.launch4j.ant.Launch4jTask"
                 classpath="${launch4j.dir}/launch4j.jar"/>
        <launch4j configFile="launch4j.xml"/>
    </target>


    <target name="dist-bin" depends="readBuildNumber, jar" description="create the binary distribution">
        <copy file="grooveJames.exe" todir="out"/>
        <zip destfile="out/grooveJames-r${build.number}-bin.zip">
            <zipfileset dir="out" includes="grooveJames.jar, grooveJames.exe"/>
        </zip>
    </target>


    <target name="dist-src" depends="readBuildNumber" description="create source distribution zip file">
        <mkdir dir="out"/>
        <zip destfile="out/grooveJames-r${build.number}-src.zip">
            <zipfileset dir="." prefix="grooveJames">
                <exclude name="**/.svn/**"/>
                <exclude name="out/**"/>
                <exclude name="gs.iws"/>
                <exclude name="**/*.log"/>
                <exclude name="**/*.log.*"/>
                <exclude name="**/Thumbs.db"/>
            </zipfileset>
        </zip>
    </target>


    <target name="release-bin" depends="readBuildNumber, dist-bin" if="filesChanged">
        <CBRelease file="out/grooveJames-r${build.number}-bin.zip"
                   tofile="grooveJames-r${build.number}-bin.zip"
                   todir="binaries"
                   description="GrooveJames ${build.number} binary files"
                   descriptionformat="T"/>
    </target>


    <target name="release-src" depends="readBuildNumber, dist-src" if="filesChanged">
        <CBRelease file="out/grooveJames-r${build.number}-src.zip"
                   tofile="grooveJames-r${build.number}-src.zip"
                   todir="sources"
                   description="GrooveJames ${build.number} sources"
                   descriptionformat="T"/>
    </target>


    <target name="readBuildNumber" depends="increaseBuildNumberIfSomeFilesChanged">
        <property file="src/groovejames/gui/version.properties"/>
        <echo message="build.number: ${build.number}" level="info"/>
        <echo message="build.date: ${build.date}" level="info"/>
    </target>


    <target name="increaseBuildNumberIfSomeFilesChanged" depends="checkIfSomeFilesChanged" if="filesChanged">
        <echo message="increasing build.number because checksum of all files changed" level="info"/>
        <propertyfile file="src/groovejames/gui/version.properties">
            <entry key="build.number" type="int" operation="+" default="0"/>
            <entry key="build.date" type="date" value="now"/>
        </propertyfile>
    </target>


    <target name="checkIfSomeFilesChanged" depends="computeChecksumOfAllFiles">
        <!-- load checksum of previous check -->
        <property file="lastrelease.properties"/>
        <echo message="   last checksum: ${last.checksum}" level="info"/>
        <echo message="current checksum: ${checksum}" level="info"/>
        <!-- compare with new checksum (this works even if there is no old checksum) -->
        <condition property="filesChanged">
            <not>
                <equals arg1="${last.checksum}" arg2="${checksum}" trim="true"/>
            </not>
        </condition>
        <!-- remember current checksum of all files for next check -->
        <propertyfile file="lastrelease.properties">
            <entry key="last.checksum" value="${checksum}"/>
        </propertyfile>
    </target>


    <target name="computeChecksumOfAllFiles">
        <delete dir="out/checksums"/>
        <mkdir dir="out/checksums"/>
        <checksum todir="out/checksums" totalproperty="checksum" algorithm="MD5">
            <fileset dir=".">
                <exclude name="**/.svn/**"/>
                <exclude name="out/**"/>
                <exclude name="gs.iws"/>
                <exclude name="**/*.log"/>
                <exclude name="**/*.log.*"/>
                <exclude name="**/Thumbs.db"/>
                <exclude name="lastrelease.properties"/>
                <exclude name="src/groovejames/gui/version.properties"/>
            </fileset>
        </checksum>
        <echo message="checksum of all files: ${checksum}" level="debug"/>
    </target>


    <target name="all" depends="clean, dist-bin, dist-src"
            description="cleanup and create source and binary distribution"/>


    <target name="release" depends="readBuildNumber, release-src, release-bin" if="filesChanged"
            description="checks if some files have been changed, if true releases files on CodeBeamer/JavaForge"/>


    <target name="all-release" depends="all, release"
            description="builds all and releases (if files have been changed)"/>


    <target name="clean" description="cleanup">
        <delete includeemptydirs="true">
            <fileset dir="out" defaultexcludes="false"/>
            <fileset dir="." includes="*.log,*.log.*"/>
        </delete>
    </target>

</project>
